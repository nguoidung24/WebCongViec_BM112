@{
    ViewData["Title"] = "Admin - Bảng Lương";
}
<style>
    .table-data{
    font-size: 13px;
    width: 100%;
    }
    .table-data tr, .table-data th, .table-data td {
    padding: 2px 10px;
    border: 1px solid gray;
    }

    .table-data table {
    background: white !important;
    color: black;
    }

    .table-data table {
    overflow: hidden;
    }

    .TenNhanSu {
    letter-spacing: 2px;
    text-transform: uppercase;
    font-weight: bold;
    }

    .bg-main {
    background: white;
    }

    .table-data tbody tr:hover {
    background-color: black !important;
    color: white !important;
    height: 60px;
    cursor: pointer;
    }
</style>
<div class="position-relative pb-4 p-3">
    <p class="text-center h6 fw-bold p-3">BẢNG LƯƠNG DỰ ÁN</p>
    <form method="get" class="d-flex justify-content-center align-items-center gap-2 mb-3">
        <div>
            <label>Từ ngày </label>
            <input class="px-2 py-1" type="date" name="startDate" value="@ViewBag.StartDate" />
        </div>
        <div>
            <label>Đến ngày </label>
            <input class="px-2 py-1" type="date" name="endDate" value="@ViewBag.EndDate" />
        </div>
        <div>
            <button name="action" value="Xem" class="btn btn-outline-success btn-sm py-1">Xem</button>
        </div>
    </form>
    <div class="text-end">
        <button style="position: fixed; top: 20px; right: 30px" onclick="exportToExcel()" class="btn mb-2 btn-primary btn-sm">📤 Export</button>
    </div>
    <table class="table-data">
        <thead style="text-align:center">
            <tr>
                <th rowspan='3' style="background-color: limegreen">ID</th>
                <th rowspan='3' style="background-color: limegreen">Họ tên</th>
                <th rowspan='3' style="background-color: limegreen">FSI/ Thời vụ</th>
                <th colspan='5' style="background-color: lightgray">Lương cơ bản</th>
                <th colspan='5' style="background-color: orange">Lương dự án</th>
                <th colspan='2' style="background-color: dodgerblue">Phát sinh tăng</th>
                <th colspan='2' style="background-color: dodgerblue">Phát sinh giảm</th>
                <th rowspan='3' style="background-color: indianred">Tổng (KPS)</th>
                <th rowspan='3' style="background-color: white">Tổng cộng</th>
            </tr>
            <tr>
                <th rowspan='2' style="background-color: lightgray">Mức/Ngày</th>
                <th colspan='2' style="background-color: lightgray">Giờ thường</th>
                <th colspan='2' style="background-color: lightgray">Thêm giờ</th>
                <th rowspan='2' style="background-color: orange">Mức/Ngày</th>
                <th colspan='2' style="background-color: orange">Giờ thường</th>
                <th colspan='2' style="background-color: orange">Thêm giờ</th>
                <th rowspan='2' style="background-color: dodgerblue">Nội dung</th>
                <th rowspan='2' style="background-color: dodgerblue">Giá trị</th>
                <th rowspan='2' style="background-color: dodgerblue">Nội dung</th>
                <th rowspan='2' style="background-color: dodgerblue">Giá trị</th>
            </tr>
            <tr>
                <th style="background-color: lightgray">Số NC</th>
                <th style="background-color: lightgray">Thành tiền</th>
                <th style="background-color: lightgray">Số NC quy đổi</th>
                <th style="background-color: lightgray">Thành tiền</th>
                <th style="background-color: orange">NS</th>
                <th style="background-color: orange">CC</th>
                <th style="background-color: orange">NS.OT</th>
                <th style="background-color: orange">CC.OT</th>
            </tr>
        </thead>
            @if (ViewBag.DSNhanSuChamCong.Count > 0)
            {
                <tbody>
                    @foreach (var cc in ViewBag.DSNhanSuChamCong)
                    {
                        <tr>
                            <td>@cc.id</td>
                            <td>@cc.ho_ten</td>
                            <td>@cc.fsi_thoi_vu</td>
                            <td>@cc.luong_co_ban_muc_ngay</td>
                            <td>@cc.luong_co_ban_so_nc</td>
                            <td>@cc.luong_co_ban_thanh_tien_1</td>
                            <td>@cc.luong_co_ban_so_nc_quy_doi</td>
                            <td>@cc.luong_co_ban_thanh_tien_2</td>
                            <td>@cc.luong_du_an_muc_ngay</td>
                            <td>@cc.luong_du_an_ns</td>
                            <td>@cc.luong_du_an_cc</td>
                            <td>@cc.luong_du_an_nsot</td>
                            <td>@cc.luong_du_an_ccot</td>
                            <td>@cc.phat_sinh_tang_noi_dung</td>
                            <td>@cc.phat_sinh_tang_gia_tri</td>
                            <td>@cc.phat_sinh_giam_noi_dung</td>
                            <td>@cc.phat_sinh_giam_gia_tri</td>
                            <td>@cc.tong_cong_kps</td>
                            <td>@cc.phat_sinh_giam_gia_tri</td>
                        </tr>
                    }
                </tbody>
            }
    </table>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

    <script>
        function exportToExcel() {
            const table = document.querySelector(".table-data");
            const wb = XLSX.utils.table_to_book(table, { sheet: "BangLuong" });
            XLSX.writeFile(wb, "BangLuongDuAn.xlsx");
        }

        document.addEventListener("DOMContentLoaded", function () {
            const tableCells = document.querySelectorAll("table.table-data td");
            tableCells.forEach(cell => {
                if (cell.innerText.trim().replace(" ","") === "0" || cell.innerText.trim().replace(" ","") === "0 ₫" || cell.innerText.trim().replace(" ","") === "0₫" ||  cell.innerText.trim().replace(" ","") === "") {
                    cell.innerText = "-";
                }
            });
        });

        // document.addEventListener("DOMContentLoaded", function () {
        //     const tableRows = document.querySelectorAll("table.table-data tr");
        //     tableRows.forEach(row => {
        //         const cells = row.querySelectorAll("td");
        //         cells.forEach(cell => {
        //             if (cell.innerText.trim() === "OS") {
        //                 row.style.backgroundColor = "red";
        //                 row.style.color = "yellow";
        //             }
        //         });
        //     });
        // });

		document.addEventListener("DOMContentLoaded", function () {
			const tableRows = document.querySelectorAll("table.table-data tr");
			tableRows.forEach(row => {
				const cells = row.querySelectorAll("td");
				cells.forEach(cell => {
					if (cell.innerText.trim() === "TDS") {
                        row.style.backgroundColor = "lightpink";
					}
				});
			});
		});
		document.addEventListener("DOMContentLoaded", function () {
			const tableRows = document.querySelectorAll("table.table-data tr");
			tableRows.forEach(row => {
				const cells = row.querySelectorAll("td");
				cells.forEach(cell => {
					if (cell.innerText.trim() === "Lead") {
						row.style.backgroundColor = "lightgreen";
					}
				});
			});
		});
		document.addEventListener("DOMContentLoaded", function () {
            const tableRows = document.querySelectorAll("table.table-data tr");
			tableRows.forEach(row => {
				const cells = row.querySelectorAll("td");
				cells.forEach(cell => {
					if (cell.innerText.trim() === "SP") {
                        row.style.backgroundColor = "lightblue";
					}
				});
			});
         });
        document.addEventListener("DOMContentLoaded", function () {
               const table = document.querySelector("table.table-data");
               const rows = Array.from(table.querySelectorAll("tbody tr"));
               const columnIndex = Array.from(table.querySelectorAll("thead th"))
                   .findIndex(th => th.innerText.trim() === "FSI/ Thời vụ");

               if (columnIndex !== -1) {
                   // Sắp xếp các hàng
                   rows.sort((rowA, rowB) => {
                       const cellA = rowA.querySelectorAll("td")[columnIndex]?.innerText.trim() || "";
                       const cellB = rowB.querySelectorAll("td")[columnIndex]?.innerText.trim() || "";

                       // Đưa các hàng có "OS" xuống cuối
                       if (cellA === "OS" && cellB !== "OS") return 1;
                       if (cellB === "OS" && cellA !== "OS") return -1;

                       // Sắp xếp tăng dần theo bảng chữ cái
                       return cellA.localeCompare(cellB);
                   });

                   // Xóa các hàng cũ và thêm lại các hàng đã sắp xếp
                   const tbody = table.querySelector("tbody");
                   tbody.innerHTML = "";
                   rows.forEach(row => tbody.appendChild(row));
               }
           });
    </script>
</div>
